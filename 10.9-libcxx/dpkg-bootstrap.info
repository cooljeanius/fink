Package: dpkg-bootstrap
Version: 1.19.7
Revision: 1
GCC: 4.0
Depends: tar-bootstrap
Maintainer: Fink Core Group <fink-core@lists.sourceforge.net>

Source: mirror:sourceforge:fink/dpkg_%v.tar.gz
Source-MD5: SHA256(b50e58b71223f66196b419f776c7791b5cc3a9aa07e1ccf85848b123517cdd51)
SourceDirectory: dpkg-%v

UpdateConfigGuessInDirs: build-aux
PatchFile: dpkg.patch
PatchFile-MD5: 82f5c581d07a327c4bbd3ca1c7a39f28

PatchScript: <<
sed -e 's,@FINKPREFIX@,%p,g' -e 's,@ARCHITECTURE@,%m,g' %{PatchFile} | patch -p1

patch -p1 < fink/patches/add-BOD.patch
patch -p1 < fink/patches/build-fix.patch
patch -p1 < fink/patches/c++filt-defaults.patch
patch -p1 < fink/patches/full-path-calls.patch
patch -p1 < fink/patches/location-fixes.patch
patch -p1 < fink/patches/protect-system-dirs.patch
patch -p1 < fink/patches/so-to-dylib.patch
patch -p1 < fink/patches/fink-as-vendor.patch
patch -p1 < fink/patches/extra-env.patch
patch -p1 < fink/patches/extra-statusfile.patch
patch -p1 < fink/patches/coreutils.patch
patch -p1 < fink/patches/fink-bld_no_fakeroot.patch

# Remove po4a and make sure it can't be found if it's installed
# this is to keep fink policy happy since it has to build the same
# everytime on all systems
perl -pi -e 's,in po4a,in notpo4a,g' configure
 
# Make sure all scripts have use lib %p/lib/perl5 to find the modules it needs
perl -pi -e 's,^(\#\!\s?/usr/bin/perl.*)$,$1\nBEGIN \{ push\(\@INC\, \"\%p\/lib\/perl5\"\) \}\;,' %b/scripts/*.pl
 
 # fix paths
for i in %b/po/*.po %b/po/*.pot %b/doc/triggers.txt %b/man/*.man %b/man/*/*.man; do \
	perl -pi -e 's,/usr,%p,g' $i; \
	perl -pi -e 's,/var,%p/var,g' $i; \
	perl -pi -e 's,/etc,%p/etc,g' $i; \
	perl -pi -e 's,amd64,x86_64,g' $i; \
done 

# Fink uses "x86_64" instead of "amd64"
cp scripts/t/Dpkg_Shlibs/objdump.basictags-amd64 scripts/t/Dpkg_Shlibs/objdump.basictags-x86_64
perl -pi -e 's,amd64,x86_64,g' data/*table scripts/Makefile.in scripts/Makefile.am scripts/t/Dpkg_Shlibs/basictags.c scripts/t/Dpkg_Shlibs/basictags.symbols scripts/t/Dpkg_Shlibs/objdump.basictags-x86_64 scripts/t/Dpkg_Shlibs.t
perl -pi -e "s,'-','-' && *p != '_',g" lib/dpkg/arch.c
perl -pi -e "s,amd64_test,amd64:test,g" lib/dpkg/t/t-arch.c

# add aarch64 for darwin
/usr/bin/awk '/arm64/{print "arm\t\taarch64\t\t(aarch64|arm64)\t\t64\tlittle"}1' data/cputable > data/cputable.new
mv data/cputable.new data/cputable
/usr/bin/awk '/darwin/{print "base-bsd-darwin-arm\t\tdarwin-arm64"}1' data/tupletable > data/tupletable.new
mv data/tupletable.new data/tupletable

# Fix for tar (Slightly modified for dpkg-bootstrap)
if [ "%n" = "dpkg-bootstrap" ]; then \
	if [[ $(uname -a | cut -d' ' -f3) > 12 ]]; then \
		perl -pi -e 's,\"tar\",\"/usr/bin/tar\",g' dpkg-deb/build.c dpkg-deb/extract.c lib/dpkg/dpkg.h lib/dpkg/subproc.c; \
		perl -pi -e 's,--warning=no-timestamp,-v,g' dpkg-deb/extract.c; \
		perl -pi -e 's,--format=gnu,--format=ustar,g' dpkg-deb/build.c; \
	else \
		perl -pi -e 's,\"tar\",\"/usr/bin/gnutar\",g' dpkg-deb/build.c dpkg-deb/extract.c lib/dpkg/dpkg.h lib/dpkg/subproc.c; \
		perl -pi -e 's,--warning=no-timestamp,--format=gnu,g' dpkg-deb/extract.c; \
	fi \
else \
	perl -pi -e 's,\"tar\",\"%p/bin/gnutar\",g' dpkg-deb/build.c dpkg-deb/extract.c lib/dpkg/dpkg.h lib/dpkg/subproc.c; \
fi

# Fix for older gcc ie: 10.5
perl -pi -e 's,-Wvla ,,g' configure

# Move dselect and dpkg-dev locals for cleaner Install Phases
perl -pi -e 's,localedir = \$\(datadir\)\/locale,localedir = \$(datadir)/locale-dselect,g' dselect/Makefile.in
perl -pi -e 's,localedir = \@localedir\@,localedir = \@localedir\@-dselect,g' dselect/po/Makefile.in.in
perl -pi -e 's,localedir = \@localedir\@,localedir = \@localedir\@-perl,g' scripts/Makefile.in scripts/po/Makefile.in.in

# Do not require autotools
perl -pi -e 's,ACLOCAL=.*$,ACLOCAL=echo,g' configure
perl -pi -e 's,AUTOCONF=.*$,AUTOCONF=echo,g' configure
perl -pi -e 's,AUTOMAKE=.*$,AUTOMAKE=echo,g' configure
perl -pi -e 's,AUTOHEADER=.*$,AUTOHEADER=echo,g' configure
perl -pi -e 's,ACLOCAL_AMFLAGS =.*$,ACLOCAL_AMFLAGS = ,g' Makefile.in

# No librt here
perl -pi -e 's,-lrt ,,g' lib/dpkg/t/Makefile.*

# Fix Tests
perl -pi -e 's,dd,gdd,g' t-func/deb-format.at t-func/deb-split.at
perl -pi -e 's,test_needs_srcdir_switch[\(][\)];,test_needs_author();\ntest_needs_srcdir_switch();,g' t/module-version.t 

# Fix Dpkg.pm values
perl -pi -e "s,'make','/usr/bin/make',g" scripts/Dpkg.pm
perl -pi -e "s,'tar','%p/bin/gnutar',g" scripts/Dpkg.pm
perl -pi -e "s,'/etc/dpkg','%p/etc/dpkg',g" scripts/Dpkg.pm
perl -pi -e "s,'/var/lib/dpkg','%p/var/lib/dpkg',g" scripts/Dpkg.pm

# Reduce the perl requirement
perl -pi -e 's,5.20.2,5.16.2,g' configure

# just for building don't force GNU patch (we don't want patch to be essential)
perl -pi -e "s,GNU patch,patch,g" configure
<<

SetCFLAGS: -g -O2 -fstack-protector -Wformat -fPIE -Wno-unused-parameter -Wno-missing-field-initializers -Wno-cast-align -Wno-format-security
SetCPPFLAGS: -D_FORTIFY_SOURCE=2
SetCXXFLAGS: -g -O2 -fstack-protector -Wformat -fPIE
SetLDFLAGS: -Wl,-bind_at_load -fPIE -Wl,-pie

# Use %P for all state and admindirs for pre fink build
ConfigureParams: <<
	--with-finkvirtuals=%p/bin/fink-virtual-pkgs \
	--with-dpkg-env-script=%p/bin/init.sh \
	--disable-dselect \
	--disable-start-stop-daemon \
	--with-admindir=%P/var/lib/dpkg \
	--mandir=%p/share/man \
	--infodir=%p/share/info \
	--sysconfdir=%p/etc \
	--sbindir=%p/sbin \
	--localstatedir=%P/var \
	--with-zlib \
	--without-liblzma \
	--with-bz2 \
	--srcdir=%b \
	--build=%m-apple-darwin \
	--disable-linker-optimisations \
	--with-dpkg-deb-compressor=gzip \
	PERL_LIBDIR=%p/lib/perl5 \
	PERL=/usr/bin/perl \
	TAR=%p/bin/tar
<<

InfoTest: <<
	TestConfigureParams: <<
		--disable-silent-rules
	<<
	TestDepends: <<
		patch,
		io-string-pm,
		time-date-pm,
		objtools,
		sensible-utils
	<<
	TestScript: <<
		make check || exit 2
	<<
<<

InstallScript: <<
install -d -m 0755 %i/share/doc/dpkg

make install DESTDIR=%d

install -d -m 0755 %i/etc/dpkg/origins
install -c -p -m 644 fink/origins %i/etc/dpkg/origins/fink
install -c -p -m 644 debian/dselect.cfg %i/etc/dpkg
## currently in fink
# install -c -p -m 644 debian/shlibs.default %i/etc/dpkg
install -c -p -m 644 debian/shlibs.override %i/etc/dpkg
install -c -p -m 644 fink/buildflags.conf %i/etc/dpkg
rm -rf %i/lib/dpkg/methods/*

install -m 0755 fink/md5sum %i/bin

install -d -m 0755 %i/etc/cron.daily
install -d -m 0755 %i/var/backups
install -m 0644 fink/dpkg.cron.daily %i/etc/cron.daily/dpkg

# install fink as a vendor
install -m 0644 scripts/Dpkg/Vendor/Fink.pm %i/lib/perl5/Dpkg/Vendor/Fink.pm

# Bootstrap ONLY, crate missing directories, and reset status file
%i/bin/dpkg --configure -a
rm -rf %i/../var/lib/dpkg/status %i/../var/lib/dpkg/status-old
touch %i/../var/lib/dpkg/status
<<
ConfFiles: <<
	%p/etc/dpkg/origins/fink
<<
DocFiles: <<
	ABOUT-NLS AUTHORS COPYING ChangeLog NEWS
	README* THANKS TODO
<<
Description: The Debian package manager (bootstrap package)
DescDetail: <<
This package provides the low-level infrastructure for handling the
installation and removal of Debian software packages.
.
For Debian package development tools, install dpkg-dev.
<<
DescPackaging: <<
  admindir goes in %P (eventual live basedir) not %p (bootstrap
  basedir): dpkg-bootstrap needs to set up the initial live dpkg
  status database.

  removed Depends and BuildDepends since this is built during phase two
  of bootstrap and those fields are not relevant there
<<
DescPort: <<
See dpkg DescPort
<<
License: GPL
Homepage: https://wiki.debian.org/Teams/Dpkg
