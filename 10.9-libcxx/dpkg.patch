diff -ruN dpkg-1.19.7.orig/fink/buildflags.conf dpkg-1.19.7/fink/buildflags.conf
--- dpkg-1.19.7.orig/fink/buildflags.conf	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/buildflags.conf	2019-12-10 14:27:04.000000000 -0700
@@ -0,0 +1,30 @@
+# defaults
+APPEND CFLAGS -g -O2
+APPEND CXXFLAGS -g -O2
+APPEND FFLAGS -g -O2
+
+# debian stackprotector
+APPEND CFLAGS -fstack-protector         
+APPEND CXXFLAGS -fstack-protector         
+
+# debian pie
+APPEND CFLAGS -fPIE
+APPEND CXXFLAGS -fPIE
+APPEND LDFLAGS -fPIE -Wl,-pie
+
+# debian relro
+APPEND LDFLAGS -Wl,-read_only_stubs
+
+# debian bindnow
+APPEND LDFLAGS -Wl,-bind_at_load
+
+# debian fortify
+APPEND CPPFLAGS -D_FORTIFY_SOURCE=2
+
+# debian format
+PREPEND CFLAGS -Wformat -Werror=format-security
+PREPEND CXXFLAGS -Wformat -Werror=format-security
+
+# fink defaults
+PREPEND CPPFLAGS -I@FINKPREFIX@/include
+PREPEND LDFLAGS -L@FINKPREFIX@/lib/@ARCHITECTURE@-darwin -L@FINKPREFIX@/lib
diff -ruN dpkg-1.19.7.orig/fink/dpkg.cron.daily dpkg-1.19.7/fink/dpkg.cron.daily
--- dpkg-1.19.7.orig/fink/dpkg.cron.daily	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/dpkg.cron.daily	2019-12-10 14:27:04.000000000 -0700
@@ -0,0 +1,10 @@
+#!/bin/sh
+
+# Backup the 7 last versions of dpkg's status file
+if cd @FINKPREFIX@/var/backups ; then
+    if ! cmp -s dpkg.status.0 @FINKPREIFX@/var/lib/dpkg/status ; then
+            cp -p @FINKPREFIX@/var/lib/dpkg/status dpkg.status
+            savelog -c 7 dpkg.status >/dev/null
+    fi
+fi
+
diff -ruN dpkg-1.19.7.orig/fink/md5sum dpkg-1.19.7/fink/md5sum
--- dpkg-1.19.7.orig/fink/md5sum	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/md5sum	2019-12-10 14:27:04.000000000 -0700
@@ -0,0 +1,322 @@
+#!/usr/bin/perl
+use strict;
+use warnings;
+
+## md5sum wrapper for Mac md5 tool ##
+# This wrapper should be installed in bin/md5sum. Since dpkg 1.10, md5sum was
+# removed, this script is intended to replace it for fink systems.
+#
+# Written by Sjors Gielen, licensed under the same license as dpkg, the
+# GNU General Public License version 2.
+
+my $md5_bin = "/sbin/md5";
+my $binary_mode = "";
+my $check_mode = 0;
+my $quiet = 0;
+my $warn  = 0;
+my $return = 0;
+my @files;
+
+read_args(@ARGV);
+
+if( @files == 0 )
+{
+  push @files, "-";
+}
+
+if( $check_mode )
+{
+  # `md5` doesn't have a check mode, so we have to implement it ourselves
+  run_check_mode( @files );
+  exit $return;
+}
+
+if( $quiet || $warn )
+{
+  print STDERR <<"NOCHECKMODE";
+$0: the --status, --warn and -w options are meaningful only when verifying checksums
+Try `md5sum --help' for more information.
+NOCHECKMODE
+  exit $return;
+}
+
+my $stdin_done = 0;
+for my $file( @files )
+{
+  if( $file eq "-" and $stdin_done )
+  {
+    # second - is empty, so md5sum is of the empty string
+    print "d41d8cd98f00b204e9800998ecf8427e  $binary_mode-\n";
+    next;
+  }
+
+  my $checksum = checksum_for( $file );
+  if( !$checksum ) {
+    # error was already printed
+    next;
+  }
+
+  # the old md5sum, nor md5, understand binary mode, so...
+  print "$checksum  $binary_mode$file\n";
+
+  if( $file eq "-" )
+  {
+    $stdin_done = 1;
+  }
+}
+
+exit;
+
+sub help_and_exit()
+{
+  print <<"HELP";
+Usage: $0 [OPTION] [FILE]...
+Print or check MD5 (128-bit) checksums.
+With no FILE, or when FILE is -, read standard input.
+This md5sum is a wrapper around Mac's md5. If you can use md5 instead, please
+do, since this script is likely to be removed at some point.
+
+  -b, --binary            no difference on Mac platforms
+  -c, --check             read MD5 sums from the FILEs and check them
+  -t, --text              no difference on Mac platforms
+
+The following two options are useful only when verifying checksums:
+      --status            don't output anything, status code shows success
+  -w, --warn              warn about improperly formatted checksum lines
+
+      --help     display this help and exit
+      --version  output version information and exit
+
+The sums are computed as described in RFC 1321.  When checking, the input
+should be a former output of this program.  The default mode is to print
+a line with checksum, a character indicating type (`*' for binary, ` ' for
+text), and name for each FILE.
+
+Report bugs to <http://fink.sourceforge.net>.
+HELP
+  exit;
+}
+
+sub version_and_exit
+{
+  print <<"VERSION";
+md5sum (Fink md5sum) 1.0
+Copyright (C) 2010 Sjors Gielen
+This wrapper should be installed in bin/md5sum. Since dpkg 1.10, md5sum was
+removed, this script is intended to replace it for fink systems.
+License from dpkg: GNU GPL version 2.
+This is free software: you are free to change and redistribute it.
+There is NO WARRENTY, to the extent permitted by law.
+
+Written by Sjors Gielen.
+VERSION
+  exit;
+}
+
+sub read_args
+{
+  my $no_opts = 0;
+  for(@_)
+  {
+    if( !$no_opts and /^--(.*)$/ )
+    {
+      my $opt = $1;
+      if( $opt eq "help" )
+      {
+        help_and_exit();
+      }
+      elsif( $opt eq "version" )
+      {
+        version_and_exit();
+      }
+      elsif( $opt eq "text" )
+      {
+        # ignore
+      }
+      elsif( $opt eq "binary" )
+      {
+        $binary_mode = "*";
+      }
+      elsif( $opt eq "check" )
+      {
+        $check_mode = 1;
+      }
+      elsif( $opt eq "status" )
+      {
+        $quiet = 1;
+      }
+      elsif( $opt eq "warn" )
+      {
+        $warn = 1;
+      }
+      elsif( $opt eq "" )
+      {
+        $no_opts = 1;
+      }
+      else
+      {
+        print STDERR <<"HELPMSG";
+$0: unrecognised option `--$opt'
+Try `$0 --help' for more information.
+HELPMSG
+        exit;
+      }
+    }
+    elsif( !$no_opts and /^-(.+)$/ )
+    {
+      my @opts = split //, $1;
+      for(@opts) {
+        if( $_ eq "t" )
+        {
+          # ignore
+        }
+        elsif( $_ eq "b" )
+        {
+          $binary_mode = "*";
+        }
+        elsif( $_ eq "c" )
+        {
+          $check_mode = 1;
+        }
+        elsif( $_ eq "w" )
+        {
+          $warn = 1;
+        }
+        elsif( $_ eq "" )
+        {
+          # - here is just STDIN
+          push @files, '-';
+        }
+        else
+        {
+          print STDERR <<"ERRORMSG";
+$0: invalid option -- $_
+Try `md5sum --help' for more information.
+ERRORMSG
+          exit;
+        }
+      }
+    }
+    else
+    {
+      push @files, $_;
+    }
+  }
+}
+
+sub checksum_for
+{
+  my ($file) = @_;
+  my $sum;
+  if( $file eq "-" )
+  {
+    # read from stdin
+    $sum = `$md5_bin -p`;
+    1 while(chomp $sum);
+    # take only the last line, that's the checksum
+    $sum = (split /\n/, $sum)[-1];
+    return $sum;
+  }
+
+  # try to open the file to get the system error ourselves
+  eval {
+    open my $f, $file or die "$!\n";
+    close $f;
+  };
+  if( $@ ) {
+    print STDERR "$0: $file: $@";
+    $return = 1;
+    return "";
+  }
+
+  $sum = `$md5_bin -q "$file"`;
+  1 while(chomp $sum);
+  return $sum;
+}
+
+sub run_check_mode
+{
+  my @files = @_;
+  my $read_stdin = 0;
+  my $f;
+
+  for my $md5file( @files )
+  {
+    eval { open $f, $md5file or die $! };
+    if( $@ )
+    {
+      print STDERR "$0: $md5file: $@\n";
+      next;
+    }
+
+    my $lines = 0;
+    my $actual_lines = 0;
+    my $valid = 0;
+    my $errors = 0;
+    while(<$f>) {
+      my $line = $_;
+      $actual_lines++;
+
+      # check this line
+      my ($sum, $file) = $line =~ /^([0-9a-fA-F]{32}) (?: |\*)(.+)$/;
+      if( !defined($sum) || !defined($file)) {
+        if( $warn && $line !~ /^#/ )
+        {
+          warn "$0: $md5file: $actual_lines: improperly formatted MD5 checksum line\n";
+        }
+        next;
+      }
+
+      $lines++;
+      my $checksum = checksum_for($file);
+      if( !$checksum )
+      {
+        if( !$quiet )
+        {
+          print "$file: FAILED open or read\n";
+        }
+        $errors++;
+      }
+      elsif( lc($checksum) eq lc($sum) )
+      {
+        if( !$quiet )
+        {
+          print "$file: OK\n";
+        }
+        $valid++;
+      }
+      else
+      {
+        $return = 1;
+        if( !$quiet )
+        {
+          print "$file: FAILED\n";
+        }
+      }
+    }
+
+    close $f;
+    if( $lines == 0 )
+    {
+      warn "$0: $md5file: no properly formatted MD5 checksum lines found\n";
+      $return = 1;
+    }
+    if( $errors > 0 )
+    {
+      my $s = $lines == 1 ? "" : "s";
+      if( !$quiet )
+      {
+        warn "$0: WARNING: $errors of $lines listed file$s could not be read\n";
+      }
+    }
+    if( $valid < ($lines-$errors) )
+    {
+      my $checksums = $lines - $errors;
+      my $nomatch = $checksums - $valid;
+      if( !$quiet )
+      {
+        warn "$0: WARNING: $nomatch of $checksums computed checksums did NOT match\n";
+      }
+    }
+  }
+}
diff -ruN dpkg-1.19.7.orig/fink/origins dpkg-1.19.7/fink/origins
--- dpkg-1.19.7.orig/fink/origins	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/origins	2019-12-10 14:27:04.000000000 -0700
@@ -0,0 +1,3 @@
+Vendor: Fink
+Vendor-URL: http://fink.sourceforge.net/
+Bugs: http://fink.sourceforge.net/
diff -ruN dpkg-1.19.7.orig/fink/patches/add-BOD.patch dpkg-1.19.7/fink/patches/add-BOD.patch
--- dpkg-1.19.7.orig/fink/patches/add-BOD.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/add-BOD.patch	2019-12-10 23:17:14.000000000 -0700
@@ -0,0 +1,93 @@
+diff -ruN dpkg-1.19.7.orig/scripts/Dpkg/Control/FieldsCore.pm dpkg-1.19.7/scripts/Dpkg/Control/FieldsCore.pm
+--- dpkg-1.19.7.orig/scripts/Dpkg/Control/FieldsCore.pm	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/Dpkg/Control/FieldsCore.pm	2019-12-10 14:39:43.000000000 -0700
+@@ -134,6 +134,10 @@
+         name => 'Build-Date',
+         allowed => CTRL_FILE_BUILDINFO,
+     },
++    'builddependsonly' => {
++        name => 'BuildDependsOnly',
++        allowed => ALL_PKG,
++    },
+     'build-depends' => {
+         name => 'Build-Depends',
+         allowed => ALL_SRC,
+@@ -611,7 +615,8 @@
+         built-for-profiles auto-built-package architecture subarchitecture
+         installer-menu-item build-essential essential origin bugs
+         maintainer installed-size), @bin_dep_fields,
+-        qw(section priority multi-arch homepage description tag task)
++        qw(section priority multi-arch homepage description tag task
++        builddependsonly)
+     ],
+     CTRL_INDEX_PKG() => [
+         qw(package package-type source version built-using kernel-version
+@@ -619,7 +624,8 @@
+         installer-menu-item build-essential essential origin bugs
+         maintainer installed-size), @bin_dep_fields,
+         qw(filename size), @bin_checksums_fields,
+-        qw(section priority multi-arch homepage description tag task)
++        qw(section priority multi-arch homepage description tag task
++        builddependsonly)
+     ],
+     CTRL_PKG_SRC() => [
+         qw(format source binary architecture version origin maintainer
+@@ -660,7 +666,7 @@
+         # These are allowed here, but not tracked by lib/dpkg/parse.c.
+         qw(auto-built-package build-essential built-for-profiles built-using
+         homepage installer-menu-item kernel-version package-type
+-        subarchitecture tag task)
++        subarchitecture tag task builddependsonly)
+     ],
+     CTRL_REPO_RELEASE() => [
+         qw(origin label suite codename changelogs date valid-until
+diff -ruN dpkg-1.19.7.orig/scripts/t/Dpkg_Control_Fields.t dpkg-1.19.7/scripts/t/Dpkg_Control_Fields.t
+--- dpkg-1.19.7.orig/scripts/t/Dpkg_Control_Fields.t	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/t/Dpkg_Control_Fields.t	2019-12-10 14:34:52.000000000 -0700
+@@ -20,7 +20,7 @@
+ use Test::Dpkg qw(:paths);
+ 
+ BEGIN {
+-    plan tests => 2438;
++    plan tests => 2460;
+ 
+     use_ok('Dpkg::Control::Types');
+     use_ok('Dpkg::Control::FieldsCore');
+@@ -73,7 +73,7 @@
+                Description Essential Homepage
+                Installer-Menu-Item Kernel-Version Multi-Arch
+                Package Package-Type Priority Section Subarchitecture
+-               Tag Task), @bin_dep_fields
++               Tag Task BuildDependsOnly), @bin_dep_fields
+         ],
+     },
+     CTRL_PKG_SRC() => {
+@@ -94,7 +94,8 @@
+                Subarchitecture Installer-Menu-Item
+                Build-Essential Essential Origin Bugs
+                Maintainer Installed-Size), @bin_dep_fields,
+-            qw(Section Priority Multi-Arch Homepage Description Tag Task)
++            qw(Section Priority Multi-Arch Homepage Description Tag Task
++               BuildDependsOnly)
+         ],
+     },
+     CTRL_INDEX_SRC() => {
+@@ -116,7 +117,8 @@
+                Subarchitecture Installer-Menu-Item
+                Build-Essential Essential Origin Bugs
+                Maintainer Installed-Size), @bin_dep_fields, @bin_files,
+-            qw(Section Priority Multi-Arch Homepage Description Tag Task)
++            qw(Section Priority Multi-Arch Homepage Description Tag Task
++               BuildDependsOnly)
+         ],
+     },
+     CTRL_REPO_RELEASE() => {
+@@ -198,7 +200,7 @@
+                Conffiles Description Triggers-Pending Triggers-Awaited
+                Auto-Built-Package Build-Essential Built-For-Profiles
+                Built-Using Homepage Installer-Menu-Item Kernel-Version
+-               Package-Type Subarchitecture Tag Task)
++               Package-Type Subarchitecture Tag Task BuildDependsOnly)
+         ],
+     },
+ );
diff -ruN dpkg-1.19.7.orig/fink/patches/build-fix.patch dpkg-1.19.7/fink/patches/build-fix.patch
--- dpkg-1.19.7.orig/fink/patches/build-fix.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/build-fix.patch	2019-12-11 08:12:50.000000000 -0700
@@ -0,0 +1,74 @@
+diff -ruN dpkg-1.19.7.orig/dselect/Makefile.am dpkg-1.19.7/dselect/Makefile.am
+--- dpkg-1.19.7.orig/dselect/Makefile.am	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/Makefile.am	2019-12-10 14:43:44.000000000 -0700
+@@ -9,7 +9,7 @@
+ 	-DLOCALEDIR=\"$(localedir)\" \
+ 	-DADMINDIR=\"$(admindir)\" \
+ 	-DLIBDIR=\"$(pkglibexecdir)\" \
+-	-DLOCALLIBDIR=\"/usr/local/lib/dpkg\" \
++	-DLOCALLIBDIR=\"@FINKPREFIX@/lib/dpkg\" \
+ 	-idirafter $(top_srcdir)/lib/compat \
+ 	-iquote $(builddir) \
+ 	-I$(top_builddir) \
+diff -ruN dpkg-1.19.7.orig/dselect/Makefile.in dpkg-1.19.7/dselect/Makefile.in
+--- dpkg-1.19.7.orig/dselect/Makefile.in	2019-06-03 15:22:35.000000000 -0600
++++ dpkg-1.19.7/dselect/Makefile.in	2019-12-10 14:43:49.000000000 -0700
+@@ -448,7 +448,7 @@
+ 	-DLOCALEDIR=\"$(localedir)\" \
+ 	-DADMINDIR=\"$(admindir)\" \
+ 	-DLIBDIR=\"$(pkglibexecdir)\" \
+-	-DLOCALLIBDIR=\"/usr/local/lib/dpkg\" \
++	-DLOCALLIBDIR=\"@FINKPREFIX@/lib/dpkg\" \
+ 	-idirafter $(top_srcdir)/lib/compat \
+ 	-iquote $(builddir) \
+ 	-I$(top_builddir) \
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/fsys-hash.c dpkg-1.19.7/lib/dpkg/fsys-hash.c
+--- dpkg-1.19.7.orig/lib/dpkg/fsys-hash.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/fsys-hash.c	2019-12-10 14:53:48.000000000 -0700
+@@ -92,7 +92,7 @@
+ 			internerr("filename node '%s' does not start with '/'",
+ 			          (*pointerp)->name);
+ 
+-		if (strcmp((*pointerp)->name + 1, name) == 0)
++                if (strcmp((*pointerp)->name + 1, name) == 0)
+ 			break;
+ 		pointerp = &(*pointerp)->next;
+ 	}
+diff -ruN dpkg-1.19.7.orig/src/help.c dpkg-1.19.7/src/help.c
+--- dpkg-1.19.7.orig/src/help.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/help.c	2019-12-10 14:51:48.000000000 -0700
+@@ -38,6 +38,19 @@
+ 
+ #include "main.h"
+ 
++/* FINK LOCAL start */
++// SystemB setenv() crashes when value == 0, but this occasionally happens
++// in dpkg.
++int _setenv(const char *name, const char *value, int overwrite) {
++  if(name == 0 || value == 0) {
++    return 0;
++  }
++  return setenv(name, value, overwrite);
++}
++#undef setenv
++#define setenv _setenv
++/* FINK LOCAL end */
++
+ const char *const statusstrings[]= {
+   [PKG_STAT_NOTINSTALLED]    = N_("not installed"),
+   [PKG_STAT_CONFIGFILES]     = N_("not installed but configs remain"),
+@@ -83,6 +96,14 @@
+   const char *path, *path_end;
+   size_t path_len;
+ 
++  /* FINK LOCAL start */
++  if (strncmp(&prog[0], "/", 1) == 0 && stat(prog, &stab) == 0)
++  {
++    // prog is an absolute path which exists, accept it
++    return true;
++  }
++  /* FINK LOCAL end */
++
+   path_list = getenv("PATH");
+   if (!path_list)
+     ohshit(_("PATH is not set"));
diff -ruN dpkg-1.19.7.orig/fink/patches/c++filt-defaults.patch dpkg-1.19.7/fink/patches/c++filt-defaults.patch
--- dpkg-1.19.7.orig/fink/patches/c++filt-defaults.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/c++filt-defaults.patch	2019-12-10 22:54:51.000000000 -0700
@@ -0,0 +1,45 @@
+diff -ruN dpkg-1.19.7.orig/scripts/Dpkg/Shlibs/Cppfilt.pm dpkg-1.19.7/scripts/Dpkg/Shlibs/Cppfilt.pm
+--- dpkg-1.19.7.orig/scripts/Dpkg/Shlibs/Cppfilt.pm	2019-03-27 19:22:31.000000000 -0600
++++ dpkg-1.19.7/scripts/Dpkg/Shlibs/Cppfilt.pm	2019-12-10 14:55:51.000000000 -0700
+@@ -47,7 +47,7 @@
+     } else {
+ 	$filt = { from => undef, to => undef,
+ 	            last_symbol => '', last_result => '' };
+-	$filt->{pid} = spawn(exec => [ 'c++filt', "--format=$type" ],
++	$filt->{pid} = spawn(exec => [ 'c++filt', "--no-strip-underscore", "--format=$type" ],
+ 	                     from_pipe => \$filt->{from},
+ 	                     to_pipe => \$filt->{to});
+ 	syserr(g_('unable to execute %s'), 'c++filt')
+diff -ruN dpkg-1.19.7.orig/scripts/t/Dpkg_Shlibs_Cppfilt.t dpkg-1.19.7/scripts/t/Dpkg_Shlibs_Cppfilt.t
+--- dpkg-1.19.7.orig/scripts/t/Dpkg_Shlibs_Cppfilt.t	2019-03-27 19:22:31.000000000 -0600
++++ dpkg-1.19.7/scripts/t/Dpkg_Shlibs_Cppfilt.t	2019-12-10 22:53:24.000000000 -0700
+@@ -68,18 +68,18 @@
+ 0000000000000000      DF *UND*  0000000000000000  GLIBC_2.2.5 wmemset
+ 0000000000000000      DF *UND*  0000000000000000  GLIBC_2.2.5 fflush
+ 0000000000000000      DF *UND*  0000000000000000  GLIBC_2.2.5 getc
+-0000000000000000  w   D  *UND*  0000000000000000              pthread_join
+-00000000000cfc22 g    DO .rodata        0000000000000001  GLIBCXX_3.4 std::numeric_limits<unsigned long long>::has_signaling_NaN
+-0000000000088d80  w   DF .text  0000000000000064  GLIBCXX_3.4 std::__timepunct<char>::__timepunct(unsigned long)
+-00000000002f40a0  w   DO .data.rel.ro   0000000000000020  GLIBCXX_3.4 VTT for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
+-000000000005a5f0 g    DF .text  0000000000000063  GLIBCXX_3.4.11 std::__atomic0::atomic_flag::clear(std::memory_order) volatile
+-00000000000bdc20  w   DF .text  0000000000000024  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&)
+-0000000000063850 g    DF .text  0000000000000062  GLIBCXX_3.4 std::ctype<wchar_t>::~ctype()
+-00000000000898b0  w   DF .text  0000000000000255  GLIBCXX_3.4 std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char const*, char const*) const
++0000000000000000  wchar_t   D  *UND*  0000000000000000              pthread_join
++00000000000cfc22 __float128    DO .rodata        0000000000000001  GLIBCXX_3.4 std::numeric_limits<unsigned long long>::has_signaling_NaN
++0000000000088d80  wchar_t   DF .text  0000000000000064  GLIBCXX_3.4 std::__timepunct<char>::__timepunct(unsigned long)
++00000000002f40a0  wchar_t   DO .data.rel.ro   0000000000000020  GLIBCXX_3.4 VTT for std::basic_ifstream<wchar_t, std::char_traits<wchar_t> >
++000000000005a5f0 __float128    DF .text  0000000000000063  GLIBCXX_3.4.11 std::__atomic0::atomic_flag::clear(std::memory_order) volatile
++00000000000bdc20  wchar_t   DF .text  0000000000000024  GLIBCXX_3.4 std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> >::basic_string(wchar_t const*, unsigned long, std::allocator<wchar_t> const&)
++0000000000063850 __float128    DF .text  0000000000000062  GLIBCXX_3.4 std::ctype<wchar_t>::~ctype()
++00000000000898b0  wchar_t   DF .text  0000000000000255  GLIBCXX_3.4 std::time_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, tm const*, char const*, char const*) const
+ 
+-00000000000bff30 g    DF .text  0000000000000019  std::condition_variable::notify_one()@GLIBCXX_3.4.11
+-00000000000666a0 g    DF .text  000000000000003f  std::tr1::hash<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&>::operator()(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const@GLIBCXX_3.4.10
+-00000000002f6160  w   DO .data.rel.ro   0000000000000050  VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@GLIBCXX_3.4
++00000000000bff30 __float128    DF .text  0000000000000019  std::condition_variable::notify_one()@GLIBCXX_3.4.11
++00000000000666a0 __float128    DF .text  000000000000003f  std::tr1::hash<std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&>::operator()(std::basic_string<wchar_t, std::char_traits<wchar_t>, std::allocator<wchar_t> > const&) const@GLIBCXX_3.4.10
++00000000002f6160  wchar_t   DO .data.rel.ro   0000000000000050  VTT for std::basic_stringstream<char, std::char_traits<char>, std::allocator<char> >@GLIBCXX_3.4
+ END
+ 
+ for my $try (1 .. 7) {
diff -ruN dpkg-1.19.7.orig/fink/patches/coreutils.patch dpkg-1.19.7/fink/patches/coreutils.patch
--- dpkg-1.19.7.orig/fink/patches/coreutils.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/coreutils.patch	2019-12-10 20:40:16.000000000 -0700
@@ -0,0 +1,21 @@
+diff -ruN dpkg-1.19.7.orig/scripts/dpkg-maintscript-helper.sh dpkg-1.19.7/scripts/dpkg-maintscript-helper.sh
+--- dpkg-1.19.7.orig/scripts/dpkg-maintscript-helper.sh	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/dpkg-maintscript-helper.sh	2019-12-10 20:38:54.000000000 -0700
+@@ -94,7 +94,7 @@
+ 	ensure_package_owns_file "$PACKAGE" "$CONFFILE" || return 0
+ 
+ 	local md5sum old_md5sum
+-	md5sum="$(md5sum "$CONFFILE" | sed -e 's/ .*//')"
++	md5sum="$(gmd5sum "$CONFFILE" | sed -e 's/ .*//')"
+ 	old_md5sum="$(dpkg-query -W -f='${Conffiles}' "$PACKAGE" | \
+ 		sed -n -e "\\'^ $CONFFILE ' { s/ obsolete$//; s/.* //; p }")"
+ 	if [ "$md5sum" != "$old_md5sum" ]; then
+@@ -205,7 +205,7 @@
+ 	ensure_package_owns_file "$PACKAGE" "$CONFFILE" || return 0
+ 
+ 	local md5sum old_md5sum
+-	md5sum="$(md5sum "$CONFFILE" | sed -e 's/ .*//')"
++	md5sum="$(gmd5sum "$CONFFILE" | sed -e 's/ .*//')"
+ 	old_md5sum="$(dpkg-query -W -f='${Conffiles}' "$PACKAGE" | \
+ 		sed -n -e "\\'^ $CONFFILE ' { s/ obsolete$//; s/.* //; p }")"
+ 	if [ "$md5sum" = "$old_md5sum" ]; then
diff -ruN dpkg-1.19.7.orig/fink/patches/extra-env.patch dpkg-1.19.7/fink/patches/extra-env.patch
--- dpkg-1.19.7.orig/fink/patches/extra-env.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/extra-env.patch	2019-12-10 21:16:34.000000000 -0700
@@ -0,0 +1,202 @@
+diff -ruN dpkg-1.19.7.orig/config.h.in dpkg-1.19.7/config.h.in
+--- dpkg-1.19.7.orig/config.h.in	2019-06-03 15:22:35.000000000 -0600
++++ dpkg-1.19.7/config.h.in	2019-12-10 19:35:30.000000000 -0700
+@@ -24,6 +24,9 @@
+ /* default dpkg-deb build compressor */
+ #undef DPKG_DEB_DEFAULT_COMPRESSOR
+ 
++/* Define if we are including an env script for maintainer script ENV */
++#undef DPKG_MAINT_ENV_SCRIPT
++
+ /* Define to 1 if translation of program messages to the user's native
+    language is requested. */
+ #undef ENABLE_NLS
+diff -ruN dpkg-1.19.7.orig/configure dpkg-1.19.7/configure
+--- dpkg-1.19.7.orig/configure	2019-06-03 15:22:35.000000000 -0600
++++ dpkg-1.19.7/configure	2019-12-10 19:38:35.000000000 -0700
+@@ -890,6 +890,7 @@
+ enable_start_stop_daemon
+ enable_update_alternatives
+ enable_devel_docs
++with_dpkg_env_script
+ with_devlibdir
+ with_pkgconfdir
+ with_admindir
+@@ -1618,6 +1619,8 @@
+   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
+   --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
+                           compiler's sysroot if not specified).
++  --with-dpkg-env-script=PATH/TO/SCRIPT
++                          script to include in the maintainer environment
+   --with-devlibdir=DIR    dpkg development library directory [LIBDIR]
+   --with-pkgconfdir=DIR   dpkg configuration directory [SYSCONFDIR/dpkg]
+   --with-admindir=DIR     dpkg database directory [LOCALSTATEDIR/lib/dpkg]
+@@ -15561,6 +15564,36 @@
+ $as_echo "$build_update_alternatives" >&6; }
+ 
+ 
++# Check if we want to run a script to set extra env vars
++
++  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for maintainer environment script" >&5
++$as_echo_n "checking for maintainer environment script... " >&6; }
++
++# Check whether --with-dpkg-env-script was given.
++if test "${with_dpkg_env_script+set}" = set; then :
++  withval=$with_dpkg_env_script; with_dpkg_env_script=$withval
++else
++  with_dpkg_env_script=no
++fi
++
++  if test "x$with_dpkg_env_script" != "xno"; then :
++
++
++cat >>confdefs.h <<_ACEOF
++#define DPKG_MAINT_ENV_SCRIPT "$with_dpkg_env_script"
++_ACEOF
++
++
++else
++
++    $as_echo "#define DPKG_MAINT_ENV_SCRIPT 0" >>confdefs.h
++
++
++fi
++  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $with_dpkg_env_script" >&5
++$as_echo "$with_dpkg_env_script" >&6; }
++
++
+ 
+ 
+   PERL_MIN_VERSION=5.20.2
+diff -ruN dpkg-1.19.7.orig/configure.ac dpkg-1.19.7/configure.ac
+--- dpkg-1.19.7.orig/configure.ac	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/configure.ac	2019-12-10 19:39:12.000000000 -0700
+@@ -55,6 +55,9 @@
+ DPKG_BUILD_RELEASE_DATE
+ DPKG_BUILD_DEVEL_DOCS
+ 
++# Check if we want to run a script to set extra env vars
++DPKG_ENV_SCRIPT([no])
++
+ # Allow alternate directories
+ DPKG_WITH_DIR([devlibdir], [${libdir}],
+   [dpkg development library directory [LIBDIR]])
+diff -ruN dpkg-1.19.7.orig/m4/dpkg-build.m4 dpkg-1.19.7/m4/dpkg-build.m4
+--- dpkg-1.19.7.orig/m4/dpkg-build.m4	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/m4/dpkg-build.m4	2019-12-10 19:39:54.000000000 -0700
+@@ -84,6 +84,23 @@
+     [default dpkg-deb build compressor])
+ ]) # DPKG_DEB_COMPRESSOR
+ 
++# DPKG_ENV_SCRIPT(SCRIPT)
++# -------------------
++# Add script to the maintainer script env.
++AC_DEFUN([DPKG_ENV_SCRIPT], [
++  AC_MSG_CHECKING([for maintainer environment script])
++  AC_ARG_WITH([dpkg-env-script],
++    [AS_HELP_STRING([--with-dpkg-env-script=PATH/TO/SCRIPT],
++                   [script to include in the maintainer environment])],
++    [with_dpkg_env_script=$withval], [with_dpkg_env_script=$1])
++  AS_IF([test "x$with_dpkg_env_script" != "xno"], [
++    AC_DEFINE_UNQUOTED([DPKG_MAINT_ENV_SCRIPT], ["$with_dpkg_env_script"], [Define to value if not no.])
++  ], [
++    AC_DEFINE([DPKG_MAINT_ENV_SCRIPT], [0])
++  ])
++  AC_MSG_RESULT([$with_dpkg_env_script])
++]) # DPKG_ENV_SCRIPT
++
+ # DPKG_DIST_IS_RELEASE()
+ # --------------------
+ # Check whether we are preparing a distribution tarball for a release, and
+diff -ruN dpkg-1.19.7.orig/src/main.h dpkg-1.19.7/src/main.h
+--- dpkg-1.19.7.orig/src/main.h	2019-06-02 19:23:55.000000000 -0600
++++ dpkg-1.19.7/src/main.h	2019-12-10 19:40:38.000000000 -0700
+@@ -296,6 +296,9 @@
+                          const char *scriptname, const char *desc,
+                          const char *cidir, char *cidirrest,
+                          const char *ifok, const char *iffallback);
++#ifdef DPKG_MAINT_ENV_SCRIPT
++int execute_env_script(void);
++#endif
+ 
+ /* Callers wanting to run the postinst use these two as they want to postpone
+  * trigger incorporation until after updating the package status. The effect
+diff -ruN dpkg-1.19.7.orig/src/script.c dpkg-1.19.7/src/script.c
+--- dpkg-1.19.7.orig/src/script.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/script.c	2019-12-10 19:45:45.000000000 -0700
+@@ -196,6 +196,11 @@
+ 		    setenv("DPKG_RUNNING_VERSION", PACKAGE_VERSION, 1))
+ 			ohshite(_("unable to setenv for maintainer script"));
+ 
++#ifdef DPKG_MAINT_ENV_SCRIPT
++		if (execute_env_script())
++			ohshite(_("unable to set extra env for maintainer script"));
++#endif
++
+ 		cmd->filename = cmd->argv[0] = maintscript_pre_exec(cmd);
+ 
+ 		if (maintscript_set_exec_context(cmd) < 0)
+@@ -397,3 +402,63 @@
+ 
+ 	return 1;
+ }
++
++#ifdef DPKG_MAINT_ENV_SCRIPT
++// Need limits.h for POSIX_ARG_MAX
++#include <limits.h>
++
++int execute_env_script(void);
++
++int
++execute_env_script() {
++	debug(dbg_scripts, "Injecting env script (%s)", DPKG_MAINT_ENV_SCRIPT);
++
++	struct stat sb;
++	// is this the right max len?
++	char buf[_POSIX_ARG_MAX];
++
++	if (!stat(DPKG_MAINT_ENV_SCRIPT, &sb)) {
++		char cmd_full[sizeof(DPKG_MAINT_ENV_SCRIPT) + 16];
++		sprintf(cmd_full, ". %s; /usr/bin/env", DPKG_MAINT_ENV_SCRIPT);
++
++		FILE *cmd_stream;
++
++		cmd_stream = popen(cmd_full, "r");
++		if (cmd_stream) {
++			debug(dbg_veryverbose, " -> reading %s env results...", DPKG_MAINT_ENV_SCRIPT);
++			while (fgets(buf, _POSIX_ARG_MAX, cmd_stream)) {
++				if (!strcmp(buf+strlen(buf)-1, "\n")) {
++					// chomp trailing newline
++					buf[strlen(buf)-1]=0;
++				}
++				// putenv owns actual passed char*
++				debug(dbg_veryverbose, " -> adding to ENV '%s'", strdup(buf));
++				putenv(strdup(buf));
++			}
++			pclose(cmd_stream);
++
++			return 0;
++		} else {
++			debug(dbg_scripts, "popen(%s) failed.", DPKG_MAINT_ENV_SCRIPT);
++		}
++	} else {
++		debug(dbg_scripts, "%s not found.", DPKG_MAINT_ENV_SCRIPT);
++	}
++
++	debug(dbg_scripts, "fallback: just prepend fink to PATH");
++	{
++		char *path;
++
++		path = getenv("PATH");
++		if (path) {
++			sprintf(buf, "PATH=%s:%s:%s", "@FINKPREFIX@/bin", "@FINKPREFIX@/sbin", path);
++			putenv(strdup(buf));
++
++			return 0;
++		}
++		debug(dbg_scripts, "could not read PATH from ENV!");
++	}
++
++	return 1;
++}
++#endif
diff -ruN dpkg-1.19.7.orig/fink/patches/extra-statusfile.patch dpkg-1.19.7/fink/patches/extra-statusfile.patch
--- dpkg-1.19.7.orig/fink/patches/extra-statusfile.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/extra-statusfile.patch	2019-12-10 22:15:44.000000000 -0700
@@ -0,0 +1,481 @@
+diff -ruN dpkg-1.19.7.orig/config.h.in dpkg-1.19.7/config.h.in
+--- dpkg-1.19.7.orig/config.h.in	2019-12-10 19:35:30.000000000 -0700
++++ dpkg-1.19.7/config.h.in	2019-12-10 19:49:13.000000000 -0700
+@@ -27,6 +27,9 @@
+ /* Define if we are including an env script for maintainer script ENV */
+ #undef DPKG_MAINT_ENV_SCRIPT
+ 
++/* Define if we are including an alt status file */
++#undef FINKVIRTUALS
++
+ /* Define to 1 if translation of program messages to the user's native
+    language is requested. */
+ #undef ENABLE_NLS
+diff -ruN dpkg-1.19.7.orig/configure dpkg-1.19.7/configure
+--- dpkg-1.19.7.orig/configure	2019-12-10 19:38:35.000000000 -0700
++++ dpkg-1.19.7/configure	2019-12-10 19:51:01.000000000 -0700
+@@ -891,6 +891,7 @@
+ enable_update_alternatives
+ enable_devel_docs
+ with_dpkg_env_script
++with_finkvirtual
+ with_devlibdir
+ with_pkgconfdir
+ with_admindir
+@@ -1621,6 +1622,8 @@
+                           compiler's sysroot if not specified).
+   --with-dpkg-env-script=PATH/TO/SCRIPT
+                           script to include in the maintainer environment
++  --with-finkvirtuals=PATH/TO/SCRIPT
++                          full path and script name to f-v-p
+   --with-devlibdir=DIR    dpkg development library directory [LIBDIR]
+   --with-pkgconfdir=DIR   dpkg configuration directory [SYSCONFDIR/dpkg]
+   --with-admindir=DIR     dpkg database directory [LOCALSTATEDIR/lib/dpkg]
+@@ -15593,6 +15596,35 @@
+   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $with_dpkg_env_script" >&5
+ $as_echo "$with_dpkg_env_script" >&6; }
+ 
++# Check if we want an fink-virtuals
++
++  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for f-v-p" >&5
++$as_echo_n "checking for f-v-p... " >&6; }
++
++# Check whether --with-finkvirtuals was given.
++if test "${with_finkvirtuals+set}" = set; then :
++  withval=$with_finkvirtuals; with_finkvirtuals=$withval
++else
++  with_finkvirtuals=no
++fi
++
++  if test "x$with_finkvirtuals" != "xno"; then :
++
++
++cat >>confdefs.h <<_ACEOF
++#define FINKVIRTUALS "$with_finkvirtuals"
++_ACEOF
++
++
++else
++
++    $as_echo "#define FINKVIRTUALS 0" >>confdefs.h
++
++
++fi
++  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $with_finkvirtuals" >&5
++$as_echo "$with_finkvirtuals" >&6; }
++
+ 
+ 
+ 
+diff -ruN dpkg-1.19.7.orig/configure.ac dpkg-1.19.7/configure.ac
+--- dpkg-1.19.7.orig/configure.ac	2019-12-10 19:39:12.000000000 -0700
++++ dpkg-1.19.7/configure.ac	2019-12-10 19:51:46.000000000 -0700
+@@ -58,6 +58,9 @@
+ # Check if we want to run a script to set extra env vars
+ DPKG_ENV_SCRIPT([no])
+ 
++# Check if we want an alternative statusfile
++FINKVIRTUALS([no])
++
+ # Allow alternate directories
+ DPKG_WITH_DIR([devlibdir], [${libdir}],
+   [dpkg development library directory [LIBDIR]])
+diff -ruN dpkg-1.19.7.orig/dselect/pkgcmds.cc dpkg-1.19.7/dselect/pkgcmds.cc
+--- dpkg-1.19.7.orig/dselect/pkgcmds.cc	2019-03-27 19:22:30.000000000 -0600
++++ dpkg-1.19.7/dselect/pkgcmds.cc	2019-12-10 20:09:24.000000000 -0700
+@@ -163,7 +163,8 @@
+     return 1;
+   if (wantvalue != PKG_WANT_HOLD)
+     return 0;
+-  if (pkg->status == PKG_STAT_INSTALLED)
++  if (pkg->status == PKG_STAT_INSTALLED ||
++      pkg->status == PKG_STAT_VIRTUAL)
+     return 1;
+   if (pkg->status == PKG_STAT_NOTINSTALLED ||
+       pkg->status == PKG_STAT_CONFIGFILES)
+diff -ruN dpkg-1.19.7.orig/dselect/pkgdepcon.cc dpkg-1.19.7/dselect/pkgdepcon.cc
+--- dpkg-1.19.7.orig/dselect/pkgdepcon.cc	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/pkgdepcon.cc	2019-12-10 20:10:50.000000000 -0700
+@@ -38,6 +38,7 @@
+       pkg->clientdata->selected == PKG_WANT_INSTALL &&
+       pkg_is_informative(pkg, &pkg->available) &&
+       (!(pkg->status == PKG_STAT_INSTALLED ||
++         pkg->status == PKG_STAT_VIRTUAL ||
+          pkg->status == PKG_STAT_TRIGGERSAWAITED ||
+          pkg->status == PKG_STAT_TRIGGERSPENDING) ||
+        dpkg_version_compare(&pkg->available.version,
+@@ -446,6 +447,7 @@
+       return true;
+     if (fixbyupgrade && !*fixbyupgrade &&
+         (!(provider->up->up->status == PKG_STAT_INSTALLED ||
++           provider->up->up->status == PKG_STAT_VIRTUAL ||
+            provider->up->up->status == PKG_STAT_TRIGGERSPENDING ||
+            provider->up->up->status == PKG_STAT_TRIGGERSAWAITED) ||
+          dpkg_version_compare(&provider->up->up->available.version,
+diff -ruN dpkg-1.19.7.orig/dselect/pkglist.cc dpkg-1.19.7/dselect/pkglist.cc
+--- dpkg-1.19.7.orig/dselect/pkglist.cc	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/pkglist.cc	2019-12-10 20:14:05.000000000 -0700
+@@ -206,6 +206,7 @@
+           table[index]->ssavail= ssa_notinst_seen;
+         }
+         break;
++      case PKG_STAT_VIRTUAL:
+       case PKG_STAT_INSTALLED:
+         veri= &table[index]->pkg->installed.version;
+         vera= &table[index]->pkg->available.version;
+@@ -247,6 +248,7 @@
+       case PKG_STAT_CONFIGFILES:
+         table[index]->ssstate= sss_configfiles;
+         break;
++      case PKG_STAT_VIRTUAL:
+       case PKG_STAT_INSTALLED:
+         table[index]->ssstate= sss_installed;
+         break;
+@@ -411,6 +413,7 @@
+         state->original == PKG_WANT_UNKNOWN) {
+       state->suggested=
+         pkg->status == PKG_STAT_INSTALLED ||
++          pkg->status == PKG_STAT_VIRTUAL ||
+           pkg->priority <= PKG_PRIO_STANDARD /* FIXME: configurable */
+             ? PKG_WANT_INSTALL : PKG_WANT_PURGE;
+       state->spriority= sp_inherit;
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/db-fsys-files.c dpkg-1.19.7/lib/dpkg/db-fsys-files.c
+--- dpkg-1.19.7.orig/lib/dpkg/db-fsys-files.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/db-fsys-files.c	2019-12-10 20:29:15.000000000 -0700
+@@ -106,6 +106,7 @@
+ 
+     onerr_abort--;
+     if (pkg->status != PKG_STAT_CONFIGFILES &&
++        pkg->status != PKG_STAT_VIRTUAL &&
+         dpkg_version_is_informative(&pkg->configversion)) {
+       warning(_("files list file for package '%.250s' missing; assuming "
+                 "package has no files currently installed"),
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/dbmodify.c dpkg-1.19.7/lib/dpkg/dbmodify.c
+--- dpkg-1.19.7.orig/lib/dpkg/dbmodify.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/dbmodify.c	2019-12-10 19:54:20.000000000 -0700
+@@ -44,6 +44,8 @@
+ #include <dpkg/dpkg-db.h>
+ #include <dpkg/file.h>
+ #include <dpkg/dir.h>
++#include <dpkg/subproc.h>
++#include <dpkg/command.h>
+ #include <dpkg/triglib.h>
+ 
+ static bool db_initialized;
+@@ -52,6 +53,11 @@
+ static char *lockfile;
+ static char *frontendlockfile;
+ static char *statusfile, *availablefile;
++#ifdef FINKVIRTUALS
++#define FINKSTATUSFILE "status-fink"
++void run_fvp(void);
++static char *extrastatusfile;
++#endif
+ static char *importanttmpfile=NULL;
+ static FILE *importanttmp;
+ static int nextupdate;
+@@ -81,6 +88,10 @@
+   int cdn, i;
+ 
+   parsedb(statusfile, pdb_parse_status, NULL);
++#ifdef FINKVIRTUALS
++  run_fvp();
++  parsedb(extrastatusfile, pdb_parse_status, NULL);
++#endif
+ 
+   *updatefnrest = '\0';
+   updateslength= -1;
+@@ -142,6 +153,9 @@
+   {   LOCKFILE,                   &lockfile           },
+   {   FRONTENDLOCKFILE,           &frontendlockfile   },
+   {   STATUSFILE,                 &statusfile         },
++#ifdef FINKVIRTUALS
++  {   FINKSTATUSFILE,             &extrastatusfile    },
++#endif
+   {   AVAILFILE,                  &availablefile      },
+   {   UPDATESDIR,                 &updatesdir         },
+   {   UPDATESDIR IMPORTANTTMP,    &importanttmpfile   },
+@@ -482,3 +496,44 @@
+     modstatdb_note(pkg);
+ }
+ 
++#ifdef FINKVIRTUALS
++/* Since subproc_wait is now private copy the code here, not the best but fast */
++static int
++subproc_wait2(pid_t pid, const char *desc)
++{
++	pid_t dead_pid;
++	int status;
++
++	while ((dead_pid = waitpid(pid, &status, 0)) == -1 && errno == EINTR) ;
++
++	if (dead_pid != pid) {
++		onerr_abort++;
++		ohshite(_("wait for %s subprocess failed"), desc);
++	}
++
++	return status;
++}
++
++void
++run_fvp(void)
++{ 
++  // If not root, wait till next time to refresh
++  if (getuid()) return;
++  pid_t pid;
++  
++  pid = subproc_fork();
++  if (pid == 0) {
++    struct command cmd;
++    size_t finkstatusfile_len = strlen(ADMINDIR) + strlen(FINKSTATUSFILE) + 2;
++    char *finkstatusfile = m_malloc(finkstatusfile_len);
++    
++    snprintf(finkstatusfile, finkstatusfile_len, "%s/%s", ADMINDIR, FINKSTATUSFILE);
++    
++    command_init(&cmd, FINKVIRTUALS, _("getting fink virtuals"));
++    command_add_args(&cmd, FINKVIRTUALS, "-o", finkstatusfile, NULL);
++    command_exec(&cmd);
++  }
++  subproc_wait2(pid, _("getting fink virtuals"));
++}
++#endif
++
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/dpkg-db.h dpkg-1.19.7/lib/dpkg/dpkg-db.h
+--- dpkg-1.19.7.orig/lib/dpkg/dpkg-db.h	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/dpkg-db.h	2019-12-10 19:57:23.000000000 -0700
+@@ -174,6 +174,7 @@
+ 	PKG_STAT_TRIGGERSAWAITED,
+ 	PKG_STAT_TRIGGERSPENDING,
+ 	PKG_STAT_INSTALLED,
++	PKG_STAT_VIRTUAL,
+ };
+ 
+ enum pkgpriority {
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/dump.c dpkg-1.19.7/lib/dpkg/dump.c
+--- dpkg-1.19.7.orig/lib/dpkg/dump.c	2019-06-02 15:25:21.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/dump.c	2019-12-10 20:06:14.000000000 -0700
+@@ -92,6 +92,7 @@
+   if (!dpkg_version_is_informative(&pkg->configversion))
+     return;
+   if (pkg->status == PKG_STAT_INSTALLED ||
++      pkg->status == PKG_STAT_VIRTUAL ||
+       pkg->status == PKG_STAT_NOTINSTALLED ||
+       pkg->status == PKG_STAT_TRIGGERSPENDING)
+     return;
+@@ -284,6 +285,7 @@
+       internerr("package %s in stata %s, has awaited or no pending triggers",
+               pkgbin_name_const(pkg, pkgbin, pnaw_always), pkg_status_name(pkg));
+     break;
++  case PKG_STAT_VIRTUAL:
+   case PKG_STAT_INSTALLED:
+     if (pkg->trigpend_head || pkg->trigaw.head)
+       internerr("package %s in state %s, has awaited or pending triggers",
+@@ -518,7 +520,7 @@
+     pkgbin = (flags & wdb_dump_available) ? &pkg->available : &pkg->installed;
+ 
+     /* Don't dump records which have no useful content. */
+-    if (!pkg_is_informative(pkg, pkgbin))
++    if (!pkg_is_informative(pkg, pkgbin) || pkg->status == PKG_STAT_VIRTUAL)
+       continue;
+ 
+     varbufrecord(&vb, pkg, pkgbin);
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/parse.c dpkg-1.19.7/lib/dpkg/parse.c
+--- dpkg-1.19.7.orig/lib/dpkg/parse.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/parse.c	2019-12-10 20:08:23.000000000 -0700
+@@ -223,6 +223,7 @@
+   if (!(ps->flags & pdb_recordavailable)) {
+     if (pkg->configversion.version) {
+       if (pkg->status == PKG_STAT_INSTALLED ||
++          pkg->status == PKG_STAT_VIRTUAL ||
+           pkg->status == PKG_STAT_NOTINSTALLED ||
+           pkg->status == PKG_STAT_TRIGGERSPENDING)
+         parse_error(ps,
+@@ -230,6 +231,7 @@
+                     "Config-Version", "Status");
+     } else {
+       if (pkg->status == PKG_STAT_INSTALLED ||
++          pkg->status == PKG_STAT_VIRTUAL ||
+           pkg->status == PKG_STAT_TRIGGERSPENDING)
+         pkg->configversion = pkgbin->version;
+     }
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/pkg-namevalue.c dpkg-1.19.7/lib/dpkg/pkg-namevalue.c
+--- dpkg-1.19.7.orig/lib/dpkg/pkg-namevalue.c	2019-03-27 19:22:30.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/pkg-namevalue.c	2019-12-10 19:58:11.000000000 -0700
+@@ -73,5 +73,6 @@
+ 	NAMEVALUE_DEF("triggers-awaited",	PKG_STAT_TRIGGERSAWAITED),
+ 	NAMEVALUE_DEF("triggers-pending",	PKG_STAT_TRIGGERSPENDING),
+ 	NAMEVALUE_DEF("installed",		PKG_STAT_INSTALLED),
++	NAMEVALUE_DEF("virtual",		PKG_STAT_VIRTUAL),
+ 	{ .name = NULL }
+ };
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/pkg-show.c dpkg-1.19.7/lib/dpkg/pkg-show.c
+--- dpkg-1.19.7.orig/lib/dpkg/pkg-show.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/pkg-show.c	2019-12-10 19:59:39.000000000 -0700
+@@ -246,7 +246,7 @@
+ int
+ pkg_abbrev_status(const struct pkginfo *pkg)
+ {
+-	return "ncHUFWti"[pkg->status];
++	return "ncHUFWtiv"[pkg->status];
+ }
+ 
+ /**
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/pkg.c dpkg-1.19.7/lib/dpkg/pkg.c
+--- dpkg-1.19.7.orig/lib/dpkg/pkg.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/pkg.c	2019-12-10 20:01:28.000000000 -0700
+@@ -196,7 +196,8 @@
+ 	if (pkgbin == &pkg->installed &&
+ 	    (pkg->want != PKG_WANT_UNKNOWN ||
+ 	     pkg->eflag != PKG_EFLAG_OK ||
+-	     pkg->status != PKG_STAT_NOTINSTALLED ||
++	     (pkg->status != PKG_STAT_NOTINSTALLED &&
++	      pkg->status != PKG_STAT_VIRTUAL) ||
+ 	     dpkg_version_is_informative(&pkg->configversion)))
+ 		return true;
+ 
+diff -ruN dpkg-1.19.7.orig/m4/dpkg-build.m4 dpkg-1.19.7/m4/dpkg-build.m4
+--- dpkg-1.19.7.orig/m4/dpkg-build.m4	2019-12-10 19:39:54.000000000 -0700
++++ dpkg-1.19.7/m4/dpkg-build.m4	2019-12-10 19:52:13.000000000 -0700
+@@ -101,6 +101,23 @@
+   AC_MSG_RESULT([$with_dpkg_env_script])
+ ]) # DPKG_ENV_SCRIPT
+ 
++# FINKVIRTUALS(FILE)
++# -------------------
++# Second status file to parse and add to the Pkg DB
++AC_DEFUN([FINKVIRTUALS], [
++  AC_MSG_CHECKING([for f-v-p])
++  AC_ARG_WITH([finkvirtuals],
++    [AS_HELP_STRING([--with-finkvirtuals=PATH/TO/SCRIPT],
++                   [full path and script name to f-v-p])],
++    [with_finkvirtuals=$withval], [with_finkvirtuals=$1])
++  AS_IF([test "x$with_finkvirutals" != "xno"], [
++    AC_DEFINE_UNQUOTED([FINKVIRTUALS], ["$with_finkvirtuals"], [Define to value if not no.])
++  ], [
++    AC_DEFINE([FINKVIRTUALS], [0])
++  ])
++  AC_MSG_RESULT([$with_finkvirtuals])
++]) # FINKVIRTUALS
++
+ # DPKG_DIST_IS_RELEASE()
+ # --------------------
+ # Check whether we are preparing a distribution tarball for a release, and
+diff -ruN dpkg-1.19.7.orig/src/archives.c dpkg-1.19.7/src/archives.c
+--- dpkg-1.19.7.orig/src/archives.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/archives.c	2019-12-10 20:16:00.000000000 -0700
+@@ -1358,6 +1358,7 @@
+              pkg_name(fixbyrm, pnaw_nonambig),
+              pkgbin_name(pkg, &pkg->available, pnaw_nonambig));
+       if (!(fixbyrm->status == PKG_STAT_INSTALLED ||
++            fixbyrm->status == PKG_STAT_VIRTUAL ||
+             fixbyrm->status == PKG_STAT_TRIGGERSPENDING ||
+             fixbyrm->status == PKG_STAT_TRIGGERSAWAITED)) {
+         notice(_("%s is not properly installed; ignoring any dependencies on it"),
+diff -ruN dpkg-1.19.7.orig/src/depcon.c dpkg-1.19.7/src/depcon.c
+--- dpkg-1.19.7.orig/src/depcon.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/depcon.c	2019-12-10 20:17:44.000000000 -0700
+@@ -338,6 +338,7 @@
+     /* Only installed packages can be made dependency problems. */
+     switch (dep->up->status) {
+     case PKG_STAT_INSTALLED:
++    case PKG_STAT_VIRTUAL:
+     case PKG_STAT_TRIGGERSPENDING:
+     case PKG_STAT_TRIGGERSAWAITED:
+       break;
+@@ -405,6 +406,7 @@
+         case PKG_ISTOBE_PREINSTALL:
+           switch (pkg_pos->status) {
+           case PKG_STAT_INSTALLED:
++          case PKG_STAT_VIRTUAL:
+           case PKG_STAT_TRIGGERSPENDING:
+             if (versionsatisfied(&pkg_pos->installed, possi)) {
+               deppossi_pkg_iter_free(possi_iter);
+@@ -507,6 +509,7 @@
+           case PKG_ISTOBE_NORMAL:
+           case PKG_ISTOBE_PREINSTALL:
+             if (provider->up->up->status == PKG_STAT_INSTALLED ||
++                provider->up->up->status == PKG_STAT_VIRTUAL ||
+                 provider->up->up->status == PKG_STAT_TRIGGERSPENDING)
+               return true;
+             if (provider->up->up->status == PKG_STAT_TRIGGERSAWAITED)
+@@ -586,6 +589,7 @@
+               break; /* No problem. */
+             /* Fall through. */
+           case PKG_STAT_INSTALLED:
++          case PKG_STAT_VIRTUAL:
+           case PKG_STAT_TRIGGERSPENDING:
+           case PKG_STAT_TRIGGERSAWAITED:
+             if (!versionsatisfied(&pkg_pos->installed, possi))
+@@ -669,6 +673,7 @@
+               break; /* No problem. */
+             /* Fall through. */
+           case PKG_STAT_INSTALLED:
++          case PKG_STAT_VIRTUAL:
+           case PKG_STAT_TRIGGERSPENDING:
+           case PKG_STAT_TRIGGERSAWAITED:
+             sprintf(linebuf,
+diff -ruN dpkg-1.19.7.orig/src/enquiry.c dpkg-1.19.7/src/enquiry.c
+--- dpkg-1.19.7.orig/src/enquiry.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/enquiry.c	2019-12-10 20:20:12.000000000 -0700
+@@ -251,6 +251,7 @@
+   switch (pkg->status) {
+   case PKG_STAT_UNPACKED:
+   case PKG_STAT_INSTALLED:
++  case PKG_STAT_VIRTUAL:
+   case PKG_STAT_HALFCONFIGURED:
+   case PKG_STAT_TRIGGERSPENDING:
+   case PKG_STAT_TRIGGERSAWAITED:
+diff -ruN dpkg-1.19.7.orig/src/help.c dpkg-1.19.7/src/help.c
+--- dpkg-1.19.7.orig/src/help.c	2019-12-10 19:02:59.000000000 -0700
++++ dpkg-1.19.7/src/help.c	2019-12-10 20:30:01.000000000 -0700
+@@ -59,7 +59,8 @@
+   [PKG_STAT_HALFCONFIGURED]  = N_("broken due to postinst failure"),
+   [PKG_STAT_TRIGGERSAWAITED] = N_("awaiting trigger processing by another package"),
+   [PKG_STAT_TRIGGERSPENDING] = N_("triggered"),
+-  [PKG_STAT_INSTALLED]       = N_("installed")
++  [PKG_STAT_INSTALLED]       = N_("installed"),
++  [PKG_STAT_VIRTUAL]         = N_("virtual")
+ };
+ 
+ struct fsys_namenode *
+diff -ruN dpkg-1.19.7.orig/src/packages.c dpkg-1.19.7/src/packages.c
+--- dpkg-1.19.7.orig/src/packages.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/packages.c	2019-12-10 20:33:03.000000000 -0700
+@@ -405,6 +405,7 @@
+   case PKG_STAT_HALFCONFIGURED:
+   case PKG_STAT_TRIGGERSAWAITED:
+   case PKG_STAT_TRIGGERSPENDING:
++  case PKG_STAT_VIRTUAL:
+   case PKG_STAT_INSTALLED:
+     if (checkversion) {
+       if (provider) {
+@@ -437,6 +438,7 @@
+       }
+     }
+     if (possdependee->status == PKG_STAT_INSTALLED ||
++        possdependee->status == PKG_STAT_VIRTUAL ||
+         possdependee->status == PKG_STAT_TRIGGERSPENDING) {
+       debug(dbg_depcondetail,"      is installed, ok and found");
+       return FOUND_OK;
+diff -ruN dpkg-1.19.7.orig/src/t/dpkg_divert.t dpkg-1.19.7/src/t/dpkg_divert.t
+--- dpkg-1.19.7.orig/src/t/dpkg_divert.t	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/src/t/dpkg_divert.t	2019-12-10 20:34:40.000000000 -0700
+@@ -48,6 +48,7 @@
+     system("rm -rf $tmpdir && mkdir -p $testdir");
+     system("mkdir -p $admindir/updates");
+     system("rm -f $admindir/status && touch $admindir/status");
++    system("rm -f $admindir/status-fink && touch $admindir/status-fink");
+     system("rm -rf $admindir/info && mkdir -p $admindir/info");
+ }
+ 
+--- dpkg-1.19.7.orig/src/trigproc.c	2021-11-04 14:38:24.000000000 -0600
++++ dpkg-1.19.7/src/trigproc.c	2021-11-04 14:38:50.000000000 -0600
+@@ -522,7 +522,7 @@
+ 
+ 	iter = pkg_hash_iter_new();
+ 	while ((pkg = pkg_hash_iter_next_pkg(iter))) {
+-		if (pkg->status <= PKG_STAT_HALFINSTALLED)
++		if (pkg->status <= PKG_STAT_HALFINSTALLED || pkg->status == PKG_STAT_VIRTUAL)
+ 			continue;
+ 		debug(dbg_triggersdetail, "trig_transitional_activate %s %s",
+ 		      pkg_name(pkg, pnaw_always),
diff -ruN dpkg-1.19.7.orig/fink/patches/fink-as-vendor.patch dpkg-1.19.7/fink/patches/fink-as-vendor.patch
--- dpkg-1.19.7.orig/fink/patches/fink-as-vendor.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/fink-as-vendor.patch	2019-12-11 08:20:27.000000000 -0700
@@ -0,0 +1,118 @@
+--- dpkg.orig/scripts/Dpkg/Vendor/Fink.pm
++++ dpkg/scripts/Dpkg/Vendor/Fink.pm
+@@ -0,0 +1,115 @@
++# Copyright © 2009-2011 Raphaël Hertzog <hertzog@debian.org>
++#
++# Hardening build flags handling derived from work of:
++# Copyright © 2009-2011 Kees Cook <kees@debian.org>
++# Copyright © 2007-2008 Canonical, Ltd.
++#
++# This program is free software; you can redistribute it and/or modify
++# it under the terms of the GNU General Public License as published by
++# the Free Software Foundation; either version 2 of the License, or
++# (at your option) any later version.
++#
++# This program is distributed in the hope that it will be useful,
++# but WITHOUT ANY WARRANTY; without even the implied warranty of
++# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
++# GNU General Public License for more details.
++#
++# You should have received a copy of the GNU General Public License
++# along with this program.  If not, see <http://www.gnu.org/licenses/>.
++
++package Dpkg::Vendor::Fink;
++
++use strict;
++use warnings;
++
++our $VERSION = "0.01";
++
++use Dpkg;
++use Dpkg::Gettext;
++use Dpkg::ErrorHandling;
++use Dpkg::Control::Types;
++
++use parent qw(Dpkg::Vendor::Default);
++
++=encoding utf8
++
++=head1 NAME
++
++Dpkg::Vendor::Fink - Fink vendor object
++
++=head1 DESCRIPTION
++
++This vendor object customize the behaviour of dpkg scripts
++for Fink specific actions.
++
++=cut
++
++sub run_hook {
++    my ($self, $hook, @params) = @_;
++
++    if ($hook eq 'before-source-build') {
++        my $srcpkg = shift @params;
++    } elsif ($hook eq 'keyrings') {
++        warnings::warnif('deprecated', 'obsolete keyrings vendor hook');
++        return ();
++    } elsif ($hook eq 'package-keyrings') {
++        return ();
++    } elsif ($hook eq 'archive-keyrings') {
++        return ();
++    } elsif ($hook eq 'archive-keyrings-historic') {
++        return ();
++    } elsif ($hook eq 'register-custom-fields') {
++        return ();
++    } elsif ($hook eq 'builtin-build-depends') {
++        return ();
++    } elsif ($hook eq 'builtin-build-conflicts') {
++        return ();
++    } elsif ($hook eq 'post-process-changelog-entry') {
++        my $fields = shift @params;
++    } elsif ($hook eq 'extend-patch-header') {
++        my ($textref, $ch_info) = @params;
++    } elsif ($hook eq 'update-buildflags') {
++        $self->add_hardening_flags(@params);
++    } elsif ($hook eq 'builtin-system-build-paths') {
++        return ();
++    } elsif ($hook eq 'build-tainted-by') {
++        return ();
++    }
++
++    # Default return value for unknown/unimplemented hooks
++    return;
++}
++
++sub add_hardening_flags {
++    my ($self, $flags) = @_;
++
++    require Dpkg::Arch;
++
++    my $arch = Dpkg::Arch::get_host_arch();
++    my ($abi, $libc, $os, $cpu) = Dpkg::Arch::debarch_to_debtuple($arch);
++
++    unless (defined $abi and defined $os and defined $cpu) {
++        warning(_g("unknown host architecture '%s'"), $arch);
++        ($abi, $os, $cpu) = ("", "", "");
++    }
++
++    # start by removing the Dpkg defaults "-g -O2"
++    $flags->strip("CFLAGS", "-g");
++    $flags->strip("CXXFLAGS", "-g");
++    $flags->strip("FFLAGS", "-g");
++    $flags->strip("CFLAGS", "-O2");
++    $flags->strip("CXXFLAGS", "-O2");
++    $flags->strip("FFLAGS", "-O2");
++
++    $flags->append("CPPFLAGS", "-I@FINKPREFIX@/include");
++    $flags->append("LDFLAGS", "-L@FINKPREFIX@/lib");
++
++    # for building 64bit libraries, we change LDFLAGS:
++    #if (exists $self->{_type_hash}->{"-64bit"}) {
++    #    if ($self->{_type_hash}->{"-64bit"} eq "-64bit") {
++    #        $defaults{"LDFLAGS"} = "-L\%p/\%lib -L\%p/lib";
++    #    }
++    #}
++}
++
++1;
diff -ruN dpkg-1.19.7.orig/fink/patches/fink-bld_no_fakeroot.patch dpkg-1.19.7/fink/patches/fink-bld_no_fakeroot.patch
--- dpkg-1.19.7.orig/fink/patches/fink-bld_no_fakeroot.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/fink-bld_no_fakeroot.patch	2019-12-10 20:56:44.000000000 -0700
@@ -0,0 +1,20 @@
+diff -ruN dpkg-1.19.7.orig/scripts/dpkg-buildpackage.pl dpkg-1.19.7/scripts/dpkg-buildpackage.pl
+--- dpkg-1.19.7.orig/scripts/dpkg-buildpackage.pl	2019-06-02 15:25:21.000000000 -0600
++++ dpkg-1.19.7/scripts/dpkg-buildpackage.pl	2019-12-10 20:56:29.000000000 -0700
+@@ -678,12 +678,15 @@
+ sub setup_rootcommand {
+     if ($< == 0) {
+         warning(g_('using a gain-root-command while being root')) if @rootcommand;
++    } elsif (getpwuid($<) eq "fink-bld") {
++        warning(_g('removing the gain-root-command while being fink-bld')) if @rootcommand;
++        pop @rootcommand if (@rootcommand);
+     } else {
+         push @rootcommand, 'fakeroot' unless @rootcommand;
+     }
+ 
+     if (@rootcommand and not find_command($rootcommand[0])) {
+-        if ($rootcommand[0] eq 'fakeroot' and $< != 0) {
++        if ($rootcommand[0] eq 'fakeroot' and $< != 0 and getpwuid($<) ne "fink-bld") {
+             error(g_("fakeroot not found, either install the fakeroot\n" .
+                      'package, specify a command with the -r option, ' .
+                      'or run this as root'));
diff -ruN dpkg-1.19.7.orig/fink/patches/full-path-calls.patch dpkg-1.19.7/fink/patches/full-path-calls.patch
--- dpkg-1.19.7.orig/fink/patches/full-path-calls.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/full-path-calls.patch	2019-12-10 18:39:30.000000000 -0700
@@ -0,0 +1,38 @@
+diff -ruN dpkg-1.19.7.orig/dselect/dselect.h dpkg-1.19.7/dselect/dselect.h
+--- dpkg-1.19.7.orig/dselect/dselect.h	2019-03-27 19:22:30.000000000 -0600
++++ dpkg-1.19.7/dselect/dselect.h	2019-12-10 18:37:41.000000000 -0700
+@@ -33,7 +33,7 @@
+ 
+ #include "dselect-curses.h"
+ 
+-#define DSELECT		"dselect"
++#define DSELECT		"@FINKPREFIX@/bin/dselect"
+ 
+ #define TOTAL_LIST_WIDTH 180
+ #define MAX_DISPLAY_INFO 120
+diff -ruN dpkg-1.19.7.orig/lib/dpkg/dpkg.h dpkg-1.19.7/lib/dpkg/dpkg.h
+--- dpkg-1.19.7.orig/lib/dpkg/dpkg.h	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/lib/dpkg/dpkg.h	2019-12-10 18:39:11.000000000 -0700
+@@ -100,14 +100,14 @@
+ #define MD5HASHLEN           32
+ #define MAXTRIGDIRECTIVE     256
+ 
+-#define BACKEND		"dpkg-deb"
+-#define SPLITTER	"dpkg-split"
+-#define DPKGQUERY	"dpkg-query"
+-#define DPKGDIVERT	"dpkg-divert"
+-#define DPKGSTAT	"dpkg-statoverride"
+-#define DPKGTRIGGER	"dpkg-trigger"
+-#define DPKG		"dpkg"
+-#define DEBSIGVERIFY	"debsig-verify"
++#define BACKEND		"@FINKPREFIX@/bin/dpkg-deb"
++#define SPLITTER	"@FINKPREFIX@/bin/dpkg-split"
++#define DPKGQUERY	"@FINKPREFIX@/bin/dpkg-query"
++#define DPKGDIVERT	"@FINKPREFIX@/bin/dpkg-divert"
++#define DPKGSTAT	"@FINKPREFIX@/bin/dpkg-statoverride"
++#define DPKGTRIGGER	"@FINKPREFIX@/bin/dpkg-trigger"
++#define DPKG		"@FINKPREFIX@/bin/dpkg"
++#define DEBSIGVERIFY	"@FINKPREFIX@/bin/debsig-verify"
+ 
+ #define RM		"rm"
+ #define CAT		"cat"
diff -ruN dpkg-1.19.7.orig/fink/patches/location-fixes.patch dpkg-1.19.7/fink/patches/location-fixes.patch
--- dpkg-1.19.7.orig/fink/patches/location-fixes.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/location-fixes.patch	2019-12-10 19:00:31.000000000 -0700
@@ -0,0 +1,73 @@
+diff -ruN dpkg-1.19.7.orig/dpkg-split/queue.c dpkg-1.19.7/dpkg-split/queue.c
+--- dpkg-1.19.7.orig/dpkg-split/queue.c	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dpkg-split/queue.c	2019-12-10 18:50:27.000000000 -0700
+@@ -45,7 +45,7 @@
+ #include "dpkg-split.h"
+ 
+ /*
+- * The queue, by default located in /var/lib/dpkg/parts/, is a plain
++ * The queue, by default located in @FINKPREFIX@/var/lib/dpkg/parts/, is a plain
+  * directory with one file per part.
+  *
+  * Each part is named “<md5sum>.<maxpartlen>.<thispartn>.<maxpartn>”,
+diff -ruN dpkg-1.19.7.orig/dselect/methods/disk/setup dpkg-1.19.7/dselect/methods/disk/setup
+--- dpkg-1.19.7.orig/dselect/methods/disk/setup	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/methods/disk/setup	2019-12-10 18:58:51.000000000 -0700
+@@ -19,7 +19,7 @@
+ option=$3
+ 
+ cd "$vardir/methods/disk"
+-tp=/var/run/ddm$$
++tp=@FINKPREFIX@/var/run/ddm$$
+ 
+ iarch=`dpkg --admindir $vardir --print-architecture`
+ 
+diff -ruN dpkg-1.19.7.orig/dselect/methods/ftp/setup.pl dpkg-1.19.7/dselect/methods/ftp/setup.pl
+--- dpkg-1.19.7.orig/dselect/methods/ftp/setup.pl	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/methods/ftp/setup.pl	2019-12-10 18:59:22.000000000 -0700
+@@ -78,7 +78,7 @@
+ You must supply an ftp site, use of passive mode, username, password,
+ path to the debian directory,list of distributions you are interested
+ in and place to download the binary package files to (relative to
+-/var/lib/dpkg/methods/ftp). You can add as much sites as you like. Later
++@FINKPREFIX@/var/lib/dpkg/methods/ftp). You can add as much sites as you like. Later
+ entries will always override older ones.
+ 
+ Supply "?" as a password to be asked each time you connect.
+diff -ruN dpkg-1.19.7.orig/dselect/methods/multicd/install dpkg-1.19.7/dselect/methods/multicd/install
+--- dpkg-1.19.7.orig/dselect/methods/multicd/install	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/dselect/methods/multicd/install	2019-12-10 18:59:37.000000000 -0700
+@@ -176,7 +176,7 @@
+ Perhaps you downloaded it with an unexpected name, or something.
+ In any case, you must find the file(s) and then either place it with
+ the correct filename(s) (as listed in the Packages.cd file or in
+-/var/lib/dpkg/available) and rerun the installation, or upgrade the
++@FINKPREFIX@/var/lib/dpkg/available) and rerun the installation, or upgrade the
+ package by using '\''dpkg --install --auto-deconfigure'\'' by hand.
+ 
+ ";
+diff -ruN dpkg-1.19.7.orig/scripts/Dpkg/Shlibs.pm dpkg-1.19.7/scripts/Dpkg/Shlibs.pm
+--- dpkg-1.19.7.orig/scripts/Dpkg/Shlibs.pm	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/Dpkg/Shlibs.pm	2019-12-10 18:55:04.000000000 -0700
+@@ -40,10 +40,10 @@
+ use Dpkg::Arch qw(get_build_arch get_host_arch :mappers);
+ 
+ use constant DEFAULT_LIBRARY_PATH =>
+-    qw(/lib /usr/lib);
++    qw(@FINKPREFIX@/lib /lib /usr/lib);
+ # XXX: Deprecated multilib paths.
+ use constant DEFAULT_MULTILIB_PATH =>
+-    qw(/lib32 /usr/lib32 /lib64 /usr/lib64);
++    qw(@FINKPREFIX@/lib32 @FINKPREFIX@/lib64 /lib32 /usr/lib32 /lib64 /usr/lib64);
+ 
+ # Library paths set by the user.
+ my @custom_librarypaths;
+@@ -126,7 +126,7 @@
+     }
+     # Define list of directories containing crossbuilt libraries.
+     if ($multiarch) {
+-        push @system_librarypaths, "/lib/$multiarch", "/usr/lib/$multiarch";
++        push @system_librarypaths, "@FINKPREFIX@/lib/$multiarch", "/lib/$multiarch", "/usr/lib/$multiarch";
+     }
+ 
+     push @system_librarypaths, DEFAULT_LIBRARY_PATH;
diff -ruN dpkg-1.19.7.orig/fink/patches/protect-system-dirs.patch dpkg-1.19.7/fink/patches/protect-system-dirs.patch
--- dpkg-1.19.7.orig/fink/patches/protect-system-dirs.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/protect-system-dirs.patch	2019-12-10 19:03:05.000000000 -0700
@@ -0,0 +1,27 @@
+diff -ruN dpkg-1.19.7.orig/src/help.c dpkg-1.19.7/src/help.c
+--- dpkg-1.19.7.orig/src/help.c	2019-12-10 14:51:48.000000000 -0700
++++ dpkg-1.19.7/src/help.c	2019-12-10 19:02:59.000000000 -0700
+@@ -275,6 +275,23 @@
+   debug(dbg_veryverbose, "dir_is_used_by_others '%s' (except %s)", file->name,
+         pkg ? pkg_name(pkg, pnaw_always) : "<none>");
+ 
++  /* FINK LOCAL begin */
++  /*
++   * Darwin has symlinks /etc -> /private/etc and /var -> /private/var
++   * instead of actual /etc and /var dirs. If dpkg removes the last
++   * pkg that it has record of having installed a file in one of those
++   * top-level dirs, it will try to remove the dir (since it thinks
++   * it's an empty dir) and it will succeed (since it's just unlinking
++   * a symlink, not trying to remove a dir that is not actually
++   * empty). That's Bad. Here we make sure these top-level dirs are
++   * never thought to be empty.
++   */
++  if( !strcmp(file->name,"/etc") || !strcmp(file->name,"/tmp") || !strcmp(file->name,"/var") ) {
++    debug(dbg_veryverbose, "dir_is_used_by_others precious!");
++    return true;
++  }
++  /* FINK LOCAL end */
++
+   iter = fsys_node_pkgs_iter_new(file);
+   while ((other_pkg = fsys_node_pkgs_iter_next(iter))) {
+     debug(dbg_veryverbose, "dir_is_used_by_others considering %s ...",
diff -ruN dpkg-1.19.7.orig/fink/patches/so-to-dylib.patch dpkg-1.19.7/fink/patches/so-to-dylib.patch
--- dpkg-1.19.7.orig/fink/patches/so-to-dylib.patch	1969-12-31 17:00:00.000000000 -0700
+++ dpkg-1.19.7/fink/patches/so-to-dylib.patch	2019-12-10 23:08:32.000000000 -0700
@@ -0,0 +1,270 @@
+diff -ruN dpkg-1.19.7.orig/scripts/Dpkg/Shlibs/Objdump.pm dpkg-1.19.7/scripts/Dpkg/Shlibs/Objdump.pm
+--- dpkg-1.19.7.orig/scripts/Dpkg/Shlibs/Objdump.pm	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/Dpkg/Shlibs/Objdump.pm	2019-12-10 19:20:39.000000000 -0700
+@@ -230,6 +230,29 @@
+     return $result;
+ }
+ 
++sub is_mach_o {
++    my ($file) = @_;
++    open(FILE, "<", $file) || syserr(_g("cannot read %s"), $file);
++    my ($header, $result) = ("", 0);
++    if (read(FILE, $header, 4) == 4) {
++       # isLittleEndian
++        # 32 bit Mach-O
++        $result = 1 if ($header =~ /^\xce\xfa\xed\xfe$/);
++        # 64 bit Mach-O
++        $result = 1 if ($header =~ /^\xcf\xfa\xed\xfe$/);
++       # Fat
++        # 32 bit Mach-O
++        $result = 1 if ($header =~ /^\xfe\xed\xfa\xce$/);
++        # 64 bit Mach-O
++        $result = 1 if ($header =~ /^\xfe\xed\xfa\xcf$/);
++
++       # Mach-O Universal object files
++        $result = 1 if ($header =~ /^\xca\xfe\xba\xbe$/);
++    }
++    close(FILE);
++    return $result;
++}
++
+ package Dpkg::Shlibs::Objdump::Object;
+ 
+ use strict;
+@@ -283,12 +306,33 @@
+     return 'objdump';
+ }
+ 
++sub _select_otool {
++    # Decide which otool to call
++    if (get_build_arch() ne get_host_arch()) {
++        my $otool = debarch_to_gnutriplet(get_host_arch()) . '-otool';
++        return $otool if find_command($otool);
++    }
++    return 'otool';
++}
++
++sub _select_nm {
++    # Decide which nm to call
++    if (get_build_arch() ne get_host_arch()) {
++        my $nm = debarch_to_gnutriplet(get_host_arch()) . '-nm';
++        return $nm if find_command($nm);
++    }
++    return 'nm';
++}
++
+ sub analyze {
+     my ($self, $file) = @_;
++    my $ret = 'none';
+ 
+     $file ||= $self->{file};
+     return unless $file;
+ 
++    use IPC::Open3;
++
+     $self->reset;
+     $self->{file} = $file;
+ 
+@@ -300,14 +344,111 @@
+     }
+ 
+     state $OBJDUMP = _select_objdump();
++    state $OTOOL = _select_otool();
++    state $NM = _select_nm();
+     local $ENV{LC_ALL} = 'C';
+-    open(my $objdump, '-|', $OBJDUMP, '-w', '-f', '-p', '-T', '-R', $file)
+-        or syserr(g_('cannot fork for %s'), $OBJDUMP);
+-    my $ret = $self->parse_objdump_output($objdump);
+-    close($objdump);
++    if (Dpkg::Shlibs::Objdump::is_elf($file)) {
++        open3(my $objdumpin, my $objdump, my $objdumperr, $OBJDUMP, "-w", "-f", "-p", "-T", "-R", $file)
++            or syserr(g_('cannot fork for %s'), $OBJDUMP);
++        my $ret = $self->parse_objdump_output($objdump);
++        close($objdump);
++    } elsif (Dpkg::Shlibs::Objdump::is_mach_o($file)) {
++        # no RPATH, HASH or GNU_HASH in macho
++        $self->{RPATH} = [ '/' ];
++
++        open3(my $objdumpin, my $objdump, my $objdumperr, $OBJDUMP, "-f", "-p", $file)
++            or syserr(_g("cannot fork for %s"), $OBJDUMP);
++        $ret = $self->parse_objdump_output($objdump);
++        close($objdump);
++
++        # get SONAME (dylib doesn't really use rpath but SONAME has a path)
++        open(my $install_name, "-|", $OTOOL, "-X", "-D", $file)
++            or syserr(_g("cannot fork for %s"), $OTOOL);
++        $self->parse_macho_soname($install_name);
++        close($install_name);
++
++        # Get list of linked libs
++        open(my $needed_names, "-|", $OTOOL, "-L", "-X", $file)
++            or syserr(_g("cannot fork for %s"), $OTOOL);
++        $self->parse_macho_needed($needed_names);
++        close($needed_names);
++
++        # Get list of symbols
++        open(my $dynsymbols, "-|", $NM, "-g", $file)
++            or syserr(_g("cannot fork for %s"), $NM);
++        $self->parse_macho_dynamic_symbol($dynsymbols);
++        close($dynsymbols);
++    }
+     return $ret;
+ }
+ 
++sub parse_macho_dynamic_symbol {
++    my ($self, $fh) = @_;
++    while (defined($_ = <$fh>)) {
++        chomp;
++
++        # no version in mach o
++        my $ver = '';
++
++        if (/^([0-9a-f]{16}) ([T|D|U]) (\S+)$/) {
++            my ($flags, $sect, $name) = ($1, $2, $3);
++            my $symbol = {
++                name => $name,
++                version => defined($ver) ? $ver : '',
++                section => $sect,
++                dynamic => "D",
++                #debug => substr($flags, 5, 1) eq "d",
++                type => $sect,
++                #weak => substr($flags, 1, 1) eq "w",
++                #local => substr($flags, 0, 1) eq "l",
++                #global => substr($flags, 0, 1) eq "g",
++                #visibility => defined($vis) ? $vis : '',
++                hidden => '',
++                defined => $sect ne 'U'
++            };
++            $self->add_dynamic_symbol($symbol);
++        }
++    }
++}
++
++sub get_macho_compatversion {
++    my ($self, $file) = @_;
++    state $OTOOL = _select_otool();
++    open(my $fh, "-|", $OTOOL, "-L", "-X", $file)
++        or syserr(_g("cannot fork for %s"), $OTOOL);
++    while (defined($_ = <$fh>)) {
++        chomp;
++        if (/^\s*(.+) \(compatibility version ([0-9.]+)/) {
++            return $2 if $1 eq $self->{SONAME};
++        }
++    }
++    close($fh);
++}
++
++sub parse_macho_needed {
++    my ($self, $fh) = @_;
++    while (defined($_ = <$fh>)) {
++        chomp;
++        if (/^\s*(.+) \(compatibility version/) {
++            next if $1 eq $self->{SONAME};
++            push @{$self->{NEEDED}}, $1;
++        }
++    }
++}
++
++sub parse_macho_soname {
++    my ($self, $fh) = @_;
++    while (defined($_ = <$fh>)) {
++        chomp;
++        if ($_) {
++            use File::Basename;
++            $self->{SONAME} = basename $_;
++            $self->{SONAME} = $_;
++            $self->{RPATH} = [ dirname $_ ];
++        }
++    }
++}
++
+ sub parse_objdump_output {
+     my ($self, $fh) = @_;
+ 
+diff -ruN dpkg-1.19.7.orig/scripts/dpkg-gensymbols.pl dpkg-1.19.7/scripts/dpkg-gensymbols.pl
+--- dpkg-1.19.7.orig/scripts/dpkg-gensymbols.pl	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/dpkg-gensymbols.pl	2019-12-10 19:22:58.000000000 -0700
+@@ -200,8 +200,9 @@
+ 	opendir(my $libdir_dh, "$libdir")
+ 	    or syserr(g_("can't read directory %s: %s"), $libdir, $!);
+ 	push @files, grep {
+-	    /(\.so\.|\.so$)/ && -f &&
+-	    Dpkg::Shlibs::Objdump::is_elf($_);
++	    /(\.so\.|\.so$|\.dylib$|\.bundle$)/ && -f $_ &&
++	    Dpkg::Shlibs::Objdump::is_elf($_) or
++	    Dpkg::Shlibs::Objdump::is_mach_o($_);
+ 	} map { "$libdir/$_" } readdir($libdir_dh);
+ 	closedir $libdir_dh;
+     }
+diff -ruN dpkg-1.19.7.orig/scripts/dpkg-shlibdeps.pl dpkg-1.19.7/scripts/dpkg-shlibdeps.pl
+--- dpkg-1.19.7.orig/scripts/dpkg-shlibdeps.pl	2019-05-08 20:57:41.000000000 -0600
++++ dpkg-1.19.7/scripts/dpkg-shlibdeps.pl	2019-12-10 19:29:07.000000000 -0700
+@@ -199,14 +199,16 @@
+ 	unless (scalar @libs) {
+ 	    $soname_notfound{$soname} = 1;
+ 	    $global_soname_notfound{$soname} = 1;
+-	    my $msg = g_('cannot find library %s needed by %s (ELF ' .
++	    my $libtype = 'ELF';
++	    $libtype = 'MACH-O' if Dpkg::Shlibs::Objdump::is_mach_o($soname);
++	    my $msg = _g("couldn't find library %s needed by %s (%s " .
+ 	                 "format: '%s' abi: '%s'; RPATH: '%s')");
+ 	    my $exec_abi = unpack 'H*', $obj->{exec_abi};
+ 	    if (scalar(split_soname($soname))) {
+-		errormsg($msg, $soname, $file, $obj->{format}, $exec_abi, join(':', @{$obj->{RPATH}}));
++		errormsg($msg, $soname, $file, $libtype, $obj->{format}, $exec_abi, join(':', @{$obj->{RPATH}}));
+ 		$error_count++;
+ 	    } else {
+-		warning($msg, $soname, $file, $obj->{format}, $exec_abi, join(':', @{$obj->{RPATH}}));
++		warning($msg, $soname, $file, $libtype, $obj->{format}, $exec_abi, join(':', @{$obj->{RPATH}}));
+ 	    }
+ 	    next;
+ 	}
+@@ -704,13 +706,19 @@
+ 
+ sub split_soname {
+     my $soname = shift;
+-    if ($soname =~ /^(.*)\.so\.(.*)$/) {
+-	return wantarray ? ($1, $2) : 1;
+-    } elsif ($soname =~ /^(.*)-(\d.*)\.so$/) {
+-	return wantarray ? ($1, $2) : 1;
++
++    if (Dpkg::Shlibs::Objdump::is_mach_o($soname)) {
++	use File::Basename;
++	my $obj = Dpkg::Shlibs::Objdump::Object->new($soname);
++	return wantarray ? ($soname, $obj->get_macho_compatversion($soname)) : 1;
+     } else {
+-	return wantarray ? () : 0;
++	if ($soname =~ /^(.*)\.so\.(.*)$/) {
++	    return wantarray ? ($1, $2) : 1;
++	} elsif ($soname =~ /^(.*)-(\d.*)\.so$/) {
++	    return wantarray ? ($1, $2) : 1;
++	}
+     }
++    return wantarray ? () : 0;
+ }
+ 
+ sub extract_from_shlibs {
+@@ -748,7 +756,7 @@
+ 	    next;
+ 	}
+ 	my $depread = $4 // '';
+-	if (($libname eq $2) && ($libversion eq $3)) {
++	if (($libname eq $2 || $soname eq $2) && ($libversion eq $3)) {
+ 	    # Define dep and end here if the package type explicitly
+ 	    # matches. Otherwise if the packagetype is not specified, use
+ 	    # the dep only as a default that can be overridden by a later
+ruN dpkg-1.19.7.orig/scripts/t/Dpkg_Shlibs.t dpkg-1.19.7/scripts/t/Dpkg_Shlibs.t 
+--- dpkg-1.19.7.orig/scripts/t/Dpkg_Shlibs.t	2019-04-18 20:14:13.000000000 -0600
++++ dpkg-1.19.7/scripts/t/Dpkg_Shlibs.t	2019-12-10 23:06:51.000000000 -0700
+@@ -414,8 +414,11 @@
+ | libbasictags1 (>= 1.1)
+  symbol11_optional@Base 1.1 1
+  symbol21_amd64@Base 2.1
++ symbol24_32@Base 2.4
+  symbol25_64@Base 2.5
+  symbol26_little@Base 2.6
++ symbol27_big@Base 2.7
++ symbol28_little_32@Base 2.8
+  symbol31_randomtag@Base 3.1
+  symbol51_untagged@Base 5.1
+ ', 'template vs. non-template on amd64');
